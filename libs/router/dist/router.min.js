//! ofa.js - v4.1.0 https://github.com/kirakiray/ofa.js  (c) 2018-2023 YAO
!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";new Set;const t=`f-${Math.random().toString(32).slice(2)}`;$.register({tag:"o-router",temp:"<style>:host{display:block;width:100%;height:100%;overflow:hidden}::slotted(o-app){display:block;width:100%;height:100%}</style><slot></slot>",attrs:{fixBody:null},watch:{fixBody(e){if(null!==e){const e=document.createElement("style");e.setAttribute(t,""),e.innerHTML="html,body{margin:0;padding:0;width:100%;height:100%;}",document.head.append(e)}else{const e=document.head.querySelector(t);e&&e.remove()}}},attached(){const t=this.$("o-app");!history.state&&window.location.hash&&(t.$("o-page")?.remove(),t.goto(location.hash.replace("#",""))),this._popstateFunc=function(t,e,o){let r,n,s,i,a;return history.state&&history.state.routerMode&&(t.routers=history.state.routers),t.on("router-change",(o=>{let a="pushState";switch(o.name){case"replace":a="replaceState";case"goto":const{routers:c}=t,{pathname:h,search:l}=new URL(o.src,location.href);if(n)return void(n=null);const u=e?e(h,l,a):`#${h}${l}`;i&&(a="replaceState",i=null),history[a]({routerMode:1,routers:c.map((t=>({tag:t.tag,src:t.src})))},"",u);break;case"back":if(s)return void(s=null);r=1,history.go(-o.delta)}})),window.addEventListener("popstate",a=e=>{const{state:a}=e;if(r)return void(r=null);if(!a){if(o){const e=o(location.href);if(e)return i=1,void t.goto(e)}return s=1,void t.back(t.routers.length-1)}const{routers:c}=a,{routers:h}=t;if(c.length<h.length)s=1,t.back(h.length-c.length);else if(c.length>h.length){const e=c.slice(),o=e.pop();if(e.length>h.length){const o=e.slice(t._history.length);t._history.push(...o)}n=1,t.goto(o.src)}else console.error("o-router error occurred")}),a}(t,null,(t=>{const e=new URL(t);if(e.hash)return e.hash.replace("#","")}))},detached(){this._popstateFunc&&window.removeEventListener("popstate",this._popstateFunc)}}),$.extensions.link=t=>{if(""===t.attr("olink")){const e=t.attr("href");let o;try{o=new URL(e)}catch(t){return}if(!/^#\//.test(o.hash)){t.attr("origin-href",e);const o=new URL(e);t.attr("href",`${location.origin}${location.pathname}#${o.pathname}`)}}}}));
//# sourceMappingURL=router.min.js.map
