{"version":3,"file":"scsr.min.js","sources":["../../../packages/ofa-error/main.js","../../router/init-router.mjs","../../../packages/xhear/public.mjs","../scsr.mjs"],"sourcesContent":["// const error_origin = \"http://127.0.0.1:5793/errors\";\nconst error_origin = \"https://ofajs.github.io/ofa-errors/errors\";\n\n// 存放错误信息的数据对象\nconst errors = {};\n\nif (globalThis.navigator && navigator.language) {\n  let langFirst = navigator.language.toLowerCase().split(\"-\")[0];\n\n  if (langFirst === \"zh\" && navigator.language.toLowerCase() !== \"zh-cn\") {\n    langFirst = \"zhft\";\n  }\n\n  (async () => {\n    if (typeof localStorage !== \"undefined\") {\n      if (localStorage[\"ofa-errors\"]) {\n        const targetLangErrors = JSON.parse(localStorage[\"ofa-errors\"]);\n        Object.assign(errors, targetLangErrors);\n      }\n\n      const errCacheTime = localStorage[\"ofa-errors-time\"];\n\n      if (!errCacheTime || Date.now() > Number(errCacheTime) + 5 * 60 * 1000) {\n        const targetLangErrors = await fetch(\n          `${error_origin}/${langFirst}.json`\n        )\n          .then((e) => e.json())\n          .catch(() => null);\n\n        if (targetLangErrors) {\n          localStorage[\"ofa-errors\"] = JSON.stringify(targetLangErrors);\n          localStorage[\"ofa-errors-time\"] = Date.now();\n        } else {\n          targetLangErrors = await fetch(`${error_origin}/en.json`)\n            .then((e) => e.json())\n            .catch((error) => {\n              console.error(error);\n              return null;\n            });\n        }\n\n        Object.assign(errors, targetLangErrors);\n      }\n    }\n  })();\n}\n\nlet isSafari = false;\nif (globalThis.navigator) {\n  isSafari =\n    navigator.userAgent.includes(\"Safari\") &&\n    !navigator.userAgent.includes(\"Chrome\");\n}\n\n/**\n * 根据键、选项和错误对象生成错误对象。\n *\n * @param {string} key - 错误描述的键。\n * @param {Object} [options] - 映射相关值的选项对象。\n * @param {Error} [error] - 原始错误对象。\n * @returns {Error} 生成的错误对象。\n */\nexport const getErr = (key, options, error) => {\n  let desc = getErrDesc(key, options);\n\n  let errObj;\n  if (error) {\n    if (isSafari) {\n      desc += `\\nCaused by: ${error.toString()}\\n`;\n\n      if (error.stack) {\n        desc += `  ${error.stack.replace(/\\n/g, \"\\n    \")}`;\n      }\n    }\n    errObj = new Error(desc, { cause: error });\n  } else {\n    errObj = new Error(desc);\n  }\n  errObj.code = key;\n  return errObj;\n};\n\n/**\n * 根据键、选项生成错误描述\n *\n * @param {string} key - 错误描述的键。\n * @param {Object} [options] - 映射相关值的选项对象。\n * @returns {string} 生成的错误描述。\n */\nexport const getErrDesc = (key, options) => {\n  if (!errors[key]) {\n    return `Error code: \"${key}\", please go to https://github.com/ofajs/ofa-errors to view the corresponding error information`;\n  }\n\n  let desc = errors[key];\n\n  // 映射相关值\n  if (options) {\n    for (let k in options) {\n      desc = desc.replace(new RegExp(`{${k}}`, \"g\"), options[k]);\n    }\n  }\n\n  return desc;\n};\n","import { isSafariBrowser } from \"../../packages/xhear/public.mjs\";\n\nexport default function initRouter({ app, getStateUrl, fixStateUrl }) {\n  if (history.state && history.state.routerMode) {\n    app.routers = history.state.routers;\n  }\n\n  // Application fallback, no window.history operation required\n  let _isFixState;\n  // When history moves forward\n  let _isGoto;\n  // When the address is back\n  let _isBack;\n  // when there is historical data, re-entering the hash address, it is necessary to replace the blank history\n  let _isFixNavigate;\n\n  app.on(\"router-change\", (e) => {\n    let methodName = \"pushState\";\n    const { name, delta, src } = e.data || {};\n\n    switch (name) {\n      case \"replace\":\n        methodName = \"replaceState\";\n      case \"goto\":\n        const { routers } = app;\n\n        const { pathname, search, origin } = new URL(src, location.href);\n\n        if (_isGoto) {\n          _isGoto = null;\n          return;\n        }\n\n        let hUrl = \"\";\n\n        if (getStateUrl) {\n          hUrl = getStateUrl(pathname, search, methodName);\n        } else if (location.origin === origin) {\n          hUrl = `#${pathname}${search}`;\n        } else {\n          hUrl = `#${origin}${pathname}${search}`;\n        }\n\n        if (_isFixNavigate) {\n          methodName = \"replaceState\";\n          _isFixNavigate = null;\n        }\n\n        history[methodName](\n          {\n            routerMode: 1,\n            routers: routers.map((e) => {\n              return {\n                src: e.src,\n              };\n            }),\n          },\n          \"\",\n          hUrl\n        );\n        break;\n      case \"back\":\n        if (_isBack) {\n          _isBack = null;\n          return;\n        }\n\n        _isFixState = 1;\n        history.go(-delta);\n        break;\n    }\n  });\n\n  let popstateFunc;\n  window.addEventListener(\n    \"popstate\",\n    (popstateFunc = (e) => {\n      const { state } = e;\n\n      if (_isFixState) {\n        _isFixState = null;\n        return;\n      }\n\n      if (!state) {\n        if (fixStateUrl) {\n          const newPath = fixStateUrl();\n          if (newPath) {\n            _isFixNavigate = 1;\n            cancelAnime(app, () => app.goto(newPath));\n            return;\n          }\n\n          if (newPath === false) {\n            return;\n          }\n        }\n\n        _isBack = 1;\n        cancelAnime(app, () => app.back(app.routers.length - 1));\n        return;\n      }\n\n      if (!state.routerMode || state.ignore) {\n        return;\n      }\n\n      const { routers: hisRouters } = state;\n      const { routers: appRouters } = app;\n\n      if (hisRouters.length < appRouters.length) {\n        // history back\n        _isBack = 1;\n        cancelAnime(app, () => app.back(appRouters.length - hisRouters.length));\n      } else if (hisRouters.length > appRouters.length) {\n        // history forward\n        const moreRouters = hisRouters.slice();\n\n        const target = moreRouters.pop();\n\n        if (moreRouters.length > appRouters.length) {\n          const canPushRouters = moreRouters.slice(app._history.length);\n          app._history.push(...canPushRouters);\n        }\n\n        _isGoto = 1;\n\n        cancelAnime(app, () => app.goto(target.src));\n      } else if (JSON.stringify(hisRouters) !== JSON.stringify(appRouters)) {\n        console.error(`o-router error occurred`);\n      }\n    })\n  );\n\n  const isSa = isSafariBrowser();\n\n  const cancelAnime = (app, func) => {\n    isSa && (app._noanime = true);\n    func();\n    isSa && (app._noanime = false);\n  };\n\n  return popstateFunc;\n}\n","import { getErr } from \"../ofa-error/main.js\";\nimport { getType } from \"../stanz/public.mjs\";\n\nexport const isFunction = (val) => getType(val).includes(\"function\");\n\nexport const hyphenToUpperCase = (str) =>\n  str.replace(/-([a-z])/g, (match, p1) => {\n    return p1.toUpperCase();\n  });\n\nexport function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport const isArrayEqual = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, len = arr1.length; i < len; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const toDashCase = (str) => {\n  return str.replace(/[A-Z]/g, function (match) {\n    return \"-\" + match.toLowerCase();\n  });\n};\n\n// Determine if an element is eligible\nexport const meetsEle = (ele, expr) => {\n  const temp = document.createElement(\"template\");\n  temp.content.append(ele.cloneNode());\n  return !!temp.content.querySelector(expr);\n};\n\nexport function isEmptyObject(obj) {\n  if (!obj) {\n    return false;\n  }\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport const removeArrayValue = (arr, target) => {\n  const index = arr.indexOf(target);\n  if (index > -1) {\n    arr.splice(index, 1);\n  }\n};\n\nexport const searchEle = (el, expr) => {\n  if (el instanceof HTMLTemplateElement) {\n    return Array.from(el.content.querySelectorAll(expr));\n  }\n  return Array.from(el.querySelectorAll(expr));\n};\n\nexport function mergeObjects(obj1, obj2) {\n  for (let key of Object.keys(obj1)) {\n    if (!obj2.hasOwnProperty(key)) {\n      delete obj1[key];\n    }\n  }\n\n  for (let [key, value] of Object.entries(obj2)) {\n    obj1[key] = value;\n  }\n}\n\nexport const isSafariBrowser = () =>\n  /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n","import initRouter from \"../router/init-router.mjs\";\n\n(() => {\n  async function ready() {\n    const app = $(\"o-app\");\n    $(\"o-app template[page]\")?.remove();\n\n    let maybeHash = false;\n    window.addEventListener(\"hashchange\", (e) => {\n      if (maybeHash) {\n        const urlObj = new URL(location.href);\n\n        const { routers } = app;\n\n        history.replaceState(\n          {\n            routerMode: 1,\n            ignore: 1,\n            routers: routers.map((e) => {\n              return {\n                src: e.src,\n              };\n            }),\n          },\n          \"\",\n          urlObj.hash\n        );\n      }\n    });\n\n    app.on(\"page-loaded\", (e) => {\n      const { _defaults } = $(e.target);\n\n      if (typeof _defaults.title === \"string\") {\n        const titleEl = $(\"head title\");\n        titleEl && (titleEl.text = _defaults.title);\n      }\n    });\n\n    if (!history?.state?.routerMode) {\n      app.push(\n        `<o-page src=\"${location.pathname}${location.search}\"></o-page>`\n      );\n    }\n\n    initRouter({\n      app,\n      getStateUrl(pathname, search) {\n        return `${pathname}${search}`;\n      },\n      fixStateUrl(e) {\n        const urlObj = new URL(location.href);\n\n        if (urlObj.hash) {\n          // 可能是hash锚地\n          maybeHash = true;\n          setTimeout(() => (maybeHash = false));\n          return false;\n        }\n      },\n    });\n  }\n\n  if (document.readyState === \"complete\") {\n    ready();\n  } else {\n    $(window).one(\"load\", () => {\n      ready();\n    });\n  }\n})();\n"],"names":["error_origin","errors","globalThis","navigator","language","langFirst","toLowerCase","split","localStorage","targetLangErrors","JSON","parse","Object","assign","errCacheTime","Date","now","Number","fetch","then","e","json","catch","stringify","error","console","userAgent","includes","initRouter","app","getStateUrl","fixStateUrl","_isFixState","_isGoto","_isBack","_isFixNavigate","popstateFunc","history","state","routerMode","routers","on","methodName","name","delta","src","data","pathname","search","origin","URL","location","href","hUrl","map","go","window","addEventListener","newPath","cancelAnime","goto","back","length","ignore","hisRouters","appRouters","moreRouters","slice","target","pop","canPushRouters","_history","push","isSa","test","func","_noanime","async","ready","$","remove","maybeHash","urlObj","replaceState","hash","_defaults","title","titleEl","text","setTimeout","document","readyState","one"],"mappings":"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"}