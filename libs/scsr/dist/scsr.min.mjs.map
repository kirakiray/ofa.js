{"version":3,"file":"scsr.min.mjs","sources":["../scsr.mjs","../../router/init-router.mjs"],"sourcesContent":["import initRouter from \"../router/init-router.mjs\";\n\n(() => {\n  async function ready() {\n    const app = $(\"o-app\");\n    $(\"o-app template[page]\").remove();\n\n    app.on(\"page-loaded\", (e) => {\n      const { _defaults } = $(e.target);\n\n      if (typeof _defaults.title === \"string\") {\n        const titleEl = $(\"head title\");\n        titleEl && (titleEl.text = _defaults.title);\n      }\n    });\n\n    app.push(`<o-page src=\"${location.pathname}\"></o-page>`);\n\n    initRouter(app, (pathname, search) => {\n      return `${pathname}${search}`;\n    });\n  }\n\n  if (document.readyState === \"complete\") {\n    ready();\n  } else {\n    $(window).one(\"load\", () => {\n      ready();\n    });\n  }\n})();\n","export default function initRouter(app, getStateUrl, fixStateUrl) {\n  if (history.state && history.state.routerMode) {\n    app.routers = history.state.routers;\n  }\n\n  // Application fallback, no window.history operation required\n  let _isFixState;\n  // When history moves forward\n  let _isGoto;\n  // When the address is back\n  let _isBack;\n  // when there is historical data, re-entering the hash address, it is necessary to replace the blank history\n  let _isFixNavigate;\n\n  app.on(\"router-change\", (e) => {\n    let methodName = \"pushState\";\n    switch (e.name) {\n      case \"replace\":\n        methodName = \"replaceState\";\n      case \"goto\":\n        const { routers } = app;\n\n        const { pathname, search } = new URL(e.src, location.href);\n\n        if (_isGoto) {\n          _isGoto = null;\n          return;\n        }\n\n        const hUrl = getStateUrl\n          ? getStateUrl(pathname, search, methodName)\n          : `#${pathname}${search}`;\n\n        if (_isFixNavigate) {\n          methodName = \"replaceState\";\n          _isFixNavigate = null;\n        }\n\n        history[methodName](\n          {\n            routerMode: 1,\n            routers: routers.map((e) => {\n              return {\n                tag: e.tag,\n                src: e.src,\n              };\n            }),\n          },\n          \"\",\n          hUrl\n        );\n        break;\n      case \"back\":\n        if (_isBack) {\n          _isBack = null;\n          return;\n        }\n\n        _isFixState = 1;\n        history.go(-e.delta);\n        break;\n    }\n  });\n\n  let popstateFunc;\n  window.addEventListener(\n    \"popstate\",\n    (popstateFunc = (e) => {\n      const { state } = e;\n\n      if (_isFixState) {\n        _isFixState = null;\n        return;\n      }\n\n      if (!state) {\n        if (fixStateUrl) {\n          const newPath = fixStateUrl(location.href);\n          if (newPath) {\n            _isFixNavigate = 1;\n            app.goto(newPath);\n            return;\n          }\n        }\n\n        _isBack = 1;\n        app.back(app.routers.length - 1);\n        return;\n      }\n\n      const { routers: hisRouters } = state;\n      const { routers: appRouters } = app;\n\n      if (hisRouters.length < appRouters.length) {\n        // history back\n        _isBack = 1;\n        app.back(appRouters.length - hisRouters.length);\n      } else if (hisRouters.length > appRouters.length) {\n        // history forward\n        const moreRouters = hisRouters.slice();\n\n        const target = moreRouters.pop();\n\n        if (moreRouters.length > appRouters.length) {\n          const canPushRouters = moreRouters.slice(app._history.length);\n          app._history.push(...canPushRouters);\n        }\n\n        _isGoto = 1;\n\n        app.goto(target.src);\n      } else {\n        console.error(`o-router error occurred`);\n      }\n    })\n  );\n\n  return popstateFunc;\n}\n"],"names":["async","ready","app","$","remove","on","e","_defaults","target","title","titleEl","text","push","location","pathname","getStateUrl","fixStateUrl","_isFixState","_isGoto","_isBack","_isFixNavigate","popstateFunc","history","state","routerMode","routers","methodName","name","search","URL","src","href","hUrl","map","tag","go","delta","window","addEventListener","newPath","goto","back","length","hisRouters","appRouters","moreRouters","slice","pop","canPushRouters","_history","console","error","initRouter","document","readyState","one"],"mappings":";AAEA,MACEA,eAAeC,IACb,MAAMC,EAAMC,EAAE,SACdA,EAAE,wBAAwBC,SAE1BF,EAAIG,GAAG,eAAgBC,IACrB,MAAMC,UAAEA,GAAcJ,EAAEG,EAAEE,QAE1B,GAA+B,iBAApBD,EAAUE,MAAoB,CACvC,MAAMC,EAAUP,EAAE,cAClBO,IAAYA,EAAQC,KAAOJ,EAAUE,MACtC,KAGHP,EAAIU,KAAK,gBAAgBC,SAASC,uBChBvB,SAAoBZ,EAAKa,EAAaC,GAMnD,IAAIC,EAEAC,EAEAC,EAEAC,EAoDAC,EA/DAC,QAAQC,OAASD,QAAQC,MAAMC,aACjCtB,EAAIuB,QAAUH,QAAQC,MAAME,SAY9BvB,EAAIG,GAAG,iBAAkBC,IACvB,IAAIoB,EAAa,YACjB,OAAQpB,EAAEqB,MACR,IAAK,UACHD,EAAa,eACf,IAAK,OACH,MAAMD,QAAEA,GAAYvB,GAEdY,SAAEA,EAAQc,OAAEA,GAAW,IAAIC,IAAIvB,EAAEwB,IAAKjB,SAASkB,MAErD,GAAIb,EAEF,YADAA,EAAU,MAIZ,MAAMc,EAAOjB,EACTA,EAAYD,EAAUc,EAAQF,GAC9B,IAAIZ,IAAWc,IAEfR,IACFM,EAAa,eACbN,EAAiB,MAGnBE,QAAQI,GACN,CACEF,WAAY,EACZC,QAASA,EAAQQ,KAAK3B,IACb,CACL4B,IAAK5B,EAAE4B,IACPJ,IAAKxB,EAAEwB,SAIb,GACAE,GAEF,MACF,IAAK,OACH,GAAIb,EAEF,YADAA,EAAU,MAIZF,EAAc,EACdK,QAAQa,IAAI7B,EAAE8B,OAEjB,IAIHC,OAAOC,iBACL,WACCjB,EAAgBf,IACf,MAAMiB,MAAEA,GAAUjB,EAElB,GAAIW,EAEF,YADAA,EAAc,MAIhB,IAAKM,EAAO,CACV,GAAIP,EAAa,CACf,MAAMuB,EAAUvB,EAAYH,SAASkB,MACrC,GAAIQ,EAGF,OAFAnB,EAAiB,OACjBlB,EAAIsC,KAAKD,EAGZ,CAID,OAFApB,EAAU,OACVjB,EAAIuC,KAAKvC,EAAIuB,QAAQiB,OAAS,EAE/B,CAED,MAAQjB,QAASkB,GAAepB,GACxBE,QAASmB,GAAe1C,EAEhC,GAAIyC,EAAWD,OAASE,EAAWF,OAEjCvB,EAAU,EACVjB,EAAIuC,KAAKG,EAAWF,OAASC,EAAWD,aACnC,GAAIC,EAAWD,OAASE,EAAWF,OAAQ,CAEhD,MAAMG,EAAcF,EAAWG,QAEzBtC,EAASqC,EAAYE,MAE3B,GAAIF,EAAYH,OAASE,EAAWF,OAAQ,CAC1C,MAAMM,EAAiBH,EAAYC,MAAM5C,EAAI+C,SAASP,QACtDxC,EAAI+C,SAASrC,QAAQoC,EACtB,CAED9B,EAAU,EAEVhB,EAAIsC,KAAKhC,EAAOsB,IACxB,MACQoB,QAAQC,MAAM,0BACf,EAKP,CDpGIC,CAAWlD,GAAK,CAACY,EAAUc,IAClB,GAAGd,IAAWc,KAExB,CAE2B,aAAxByB,SAASC,WACXrD,IAEAE,EAAEkC,QAAQkB,IAAI,QAAQ,KACpBtD,GAAO,GAGZ,EA5BD"}